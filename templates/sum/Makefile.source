[%' vim: syntax=golem
    This template defines the Makefile.source that goes under
    <process_dir>/sum/
    It is similar to that of <process_dir>/helicity*/
'%]# vim: ts=3:sw=3
[% @if internal OLP_MODE %]
include ../../Makefile.conf[%
@else %]
include ../Makefile.conf[%
@end @if %]


[% @for helicities var=test
	symbol_plus2=+2
	symbol_plus=+1
	symbol_minus=-1
	symbol_minus2=-2
	symbol_zero=0
%][% @end @for %]
# @date: [% time_stamp format=%x~%X %]


FORM_OPT=-D PROCESSPATH=.. \
	 -D PWD=. \
	 -p ..:../codegen \
	 -M -q

[% @if generate_loop_diagrams %]
DIAGRAMS_VIRT=[%
   @for elements topolopy.keep.virt %] \
	d[%$_%]l1.f90[%
	   @if extension quadruple %] \
	d[%$_%]l1_qp.f90[%
	   @end @if %] \
	d[%$_%]l1d.f90[%
	   @if extension quadruple %] \
	d[%$_%]l1d_qp.f90[%
	   @end @if %][%
   @if extension ninja %] \
    d[%$_%]l131.f90 \
    d[%$_%]l132.f90 \
    d[%$_%]l121.f90[%
      @if extension quadruple %] \
        d[%$_%]l131_qp.f90 \
        d[%$_%]l132_qp.f90 \
        d[%$_%]l121_qp.f90[%
      @end @if %][%
      @end @if %][%
   @end @for %]

TXT_VIRT=$(subst .f90,.txt,$(DIAGRAMS_VIRT))

ABB_VIRT=[%
      @for elements topolopy.keep.virt %] \
	abbrevd[%$_%].f90[%
      @end @for %][%
  @if extension quadruple %][%
      @for elements topolopy.keep.virt %] \
	abbrevd[%$_%]_qp.f90[%
      @end @for %][%
@end @if extension quadruple %]
SOURCE_VIRT=$(ABB_VIRT) $(DIAGRAMS_VIRT)
[% @else %]
DIAGRAMS_VIRT=
TXT_VIRT=
SOURCE_VIRT=
[% @end @if generate_loop_diagrams %]

.PHONY: source
.SUFFIXES:
all_source: $(SOURCE_VIRT)

[% 
@if generate_loop_diagrams %][%
   @for groups var=grp rank=grank %][%
	   @for diagrams group=grp %]
d[%$_%]l1.prc:
	@echo Form is optimizing loop diagram [%$_%] for all helicities
	@$(FORM) $(FORM_OPT) \
		-D DIAG=[%$_%] \
		-D LOOPS=1 \
                -D OUTFILE=d[%$_%]l1 \
      -D RANK=[% rank %] \
      -D DERIVATIVESATZERO=1 \[%
@if internal GENERATE_NINJA_TRIPLE %]
      -D RANK=[% rank %] \
      -D LOOPSIZE=[% loopsize diagram=$_ %] \[%
@end @if %]
		helsum.frm[%
		@end @for%][%
	@end @for%][%
@end @if%]

[% 
@if generate_loop_diagrams %][%
   @for groups var=grp rank=grank %][%
	   @for diagrams group=grp %]

d[%$_%]l1.txt: d[%$_%]l1.prc
	@echo Form is optimizing loop diagram [%$_%] @ Helicity sum
	@$(FORM) $(FORM_OPT) \
		-D OUTFILE=d[%$_%]l1 \
		-D DIAG=[%$_%] \
		-D RANK=[% rank %] \
		-D DERIVATIVESATZERO=1 \
		../codegen/finaloptimization.frm
d[%$_%]l1d.txt : d[%$_%]l1.txt
	@echo Form is generating loop diagram derivatives [%$_%] @ Helicity sum
	@$(FORM) $(FORM_OPT) \
		-w$(FORM_THREADS) \
		-D OUTFILE=d[%$_%]l1 \
		-D DIAG=[%$_%] \
		-D RANK=[% rank %] \
		-D DERIVATIVESATZERO=1 \
                -D OUTSUFFIX=hh \
		../codegen/derive.frm[%
   @for repeat rank inclusive=true var=rk %]
	@echo Form is optimizing loop diagram [%$_%] rank [%rk%] @ Helicity sum
	@$(FORM) $(FORM_OPT) \
		-D OUTFILE=d[%$_%]l1 \
		-D DIAG=[%$_%] \
		-D RANK=[% rk %] \
		-D GENERATEDERIVATIVES=1 \
		../codegen/finaloptimization.frm[%
	@end @for%]
d[%$_%]l1.f90: d[%$_%]l1.txt
	@echo Python is processing loop diagram [%$_%] @ Helicity sum
	@$(PYTHON) ../codegen/buildfortran.py \
		-i $< \
		--DIAGRAM=[%$_%] \
		--GROUP=[%grp%]  \
		--HELICITY=-1 [% 'all helicities' %] \
		--QSIGN=[% sign %] \
		--QSHIFT=[%shift%]
abbrevd[%$_%].f90: d[%$_%]l1.f90
d[%$_%]l1d.f90 : d[%$_%]l1d.txt
	@echo Python is processing derivative [%$_%] @ Helicity sum
	@$(PYTHON) ../codegen/buildfortran_d.py \
		-i $< \
		--DIAGRAM=[%$_%] \
		--GROUP=[%grp%]  \
		--HELICITY=-1 [% 'all helicities' %] \
		--QSIGN=[%sign%] \
		--QSHIFT=[%shift%] \
		--RANK=[%rank%] \
		--LOOPSIZE=[% loopsize diagram=$_ %]
[% @if extension ninja %] 
d[%$_%]l14.txt : d[%$_%]l1.txt
	@echo Form is optimizing loop diagram [%$_%] for ninja @ Helicity sum
	@$(FORM) $(FORM_OPT) \
		-D OUTFILE=d[%$_%]l1 \
		-D DIAG=[%$_%] \
		-D LOOPSIZE=[% loopsize diagram=$_ %] \
		-D RANK=[% rank %] \
		-D GLOOPSIZE=[% loopsize group=grp %] \
		-D GRANK=[% grank %] \
		../codegen/ninja.frm
	@: > d[%$_%]l13.txt # makes sure the file is always created
	@: > d[%$_%]l12.txt # makes sure the file is always created
	@: > d[%$_%]l1mu2.txt # makes sure the file is always created
	@echo Form is optimizing loop diagram [%$_%] laurent index 31 for triangles @ Helicity sum
	@$(FORM) $(FORM_OPT) \
		-D OUTFILE=d[%$_%]l1 \
		-D DIAG=[%$_%] \
		-D LOOPSIZE=[% loopsize diagram=$_ %] \
		-D RANK=[% rank %] \
		-D GLOOPSIZE=[% loopsize group=grp %] \
		-D GRANK=[% grank %] \
		-D EXPANSIONCUT=3 \
		-D EXPANSIONID=31 \
		../codegen/ninjafinalopt.frm
	@echo Form is optimizing loop diagram [%$_%] laurent index 32 for triangles @ Helicity sum
	@$(FORM) $(FORM_OPT) \
		-D OUTFILE=d[%$_%]l1 \
		-D DIAG=[%$_%] \
		-D LOOPSIZE=[% loopsize diagram=$_ %] \
		-D RANK=[% rank %] \
		-D GLOOPSIZE=[% loopsize group=grp %] \
		-D GRANK=[% grank %] \
		-D EXPANSIONCUT=3 \
		-D EXPANSIONID=32 \
		../codegen/ninjafinalopt.frm
	@echo Form is optimizing loop diagram [%$_%] laurent index 21 for bubbles @ Helicity sum
	@$(FORM) $(FORM_OPT) \
		-D OUTFILE=d[%$_%]l1 \
		-D DIAG=[%$_%] \
		-D LOOPSIZE=[% loopsize diagram=$_ %] \
		-D RANK=[% rank %] \
		-D GLOOPSIZE=[% loopsize group=grp %] \
		-D GRANK=[% grank %] \
		-D EXPANSIONCUT=2 \
		-D EXPANSIONID=21 \
		../codegen/ninjafinalopt.frm
	@echo Form is optimizing loop diagram [%$_%] laurent index 22 for bubbles @ Helicity sum
	@$(FORM) $(FORM_OPT) \
		-D OUTFILE=d[%$_%]l1 \
		-D DIAG=[%$_%] \
		-D LOOPSIZE=[% loopsize diagram=$_ %] \
		-D RANK=[% rank %] \
		-D GLOOPSIZE=[% loopsize group=grp %] \
		-D GRANK=[% grank %] \
		-D EXPANSIONCUT=2 \
		-D EXPANSIONID=22 \
		../codegen/ninjafinalopt.frm
	@echo Form is optimizing loop diagram [%$_%] mu expansion for boxes @ Helicity sum
	@$(FORM) $(FORM_OPT) \
		-D OUTFILE=d[%$_%]l1 \
		-D DIAG=[%$_%] \
		-D LOOPSIZE=[% loopsize diagram=$_ %] \
		-D RANK=[% rank %] \
		-D GLOOPSIZE=[% loopsize group=grp %] \
		-D GRANK=[% grank %] \
		-D EXPANSIONCUT=4 \
		-D EXPANSIONID=Mu2 \
		../codegen/ninjafinalopt.frm

d[%$_%]l13.txt d[%$_%]l12.txt : d[%$_%]l14-stamp
d[%$_%]l13-stamp d[%$_%]l12-stamp  d[%$_%]l14-stamp: d[%$_%]l14.txt
d[%$_%]l131.f90[% @if extension quadruple %] d[%$_%]l131_qp.f90[% @end @if %]: d[%$_%]l13.txt
	@echo Python is processing ninja triangles expansion [%$_%] @ Helicity sum
	@$(PYTHON) ../codegen/buildfortran_tn3.py \
		-i $< \
		--DIAGRAM=[%$_%] \
		--GROUP=[%grp%]  \
		--HELICITY=-1 [% 'all helicities' %] \
		--QSIGN=[%sign%] \
		--QSHIFT=[%shift%] \
		--RANK=[%rank%] \
		--LOOPSIZE=[% loopsize diagram=$_ %]

d[%$_%]l132.f90[% @if extension quadruple %] d[%$_%]l132_qp.f90[% @end @if %] : d[%$_%]l12.txt
	@echo Python is processing ninja bubbles expansion [%$_%] @ Helicity sum
	@$(PYTHON) ../codegen/buildfortran_tn2.py \
		-i $< \
		--DIAGRAM=[%$_%] \
		--GROUP=[%grp%]  \
		--HELICITY=-1 [% 'all helicities' %] \
		--QSIGN=[%sign%] \
		--QSHIFT=[%shift%] \
		--RANK=[%rank%] \
		--LOOPSIZE=[% loopsize diagram=$_ %]
d[%$_%]l121.f90[% @if extension quadruple %] d[%$_%]l121_qp.f90[% @end @if %]: d[%$_%]l14.txt
	@echo Python is processing ninja mu expansion [%$_%] @ Helicity sum
	@$(PYTHON) ../codegen/buildfortran_tmu.py \
		-i $< \
		--DIAGRAM=[%$_%] \
		--GROUP=[%grp%]  \
		--HELICITY=-1 [% 'all helicities' %] \
		--QSIGN=[%sign%] \
		--QSHIFT=[%shift%] \
		--RANK=[%rank%] \
		--LOOPSIZE=[% loopsize diagram=$_ %][%
		@end @if %][%
	@end @for diagrams %][%
@end @for groups %][%
@end @if generate_loop_diagrams %]


